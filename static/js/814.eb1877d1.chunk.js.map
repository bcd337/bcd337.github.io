{"version":3,"file":"static/js/814.eb1877d1.chunk.js","mappings":"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","sources":["components/arrow/arrow.styled.ts","components/arrow/arrow.component.tsx","components/buttonCicle/buttonCicle.styled.ts","components/buttonCicle/buttonCicle.component.tsx","hooks/anime/useGetAnimeDetail.ts","components/animeBannerImage/animeBannerImage.styled.ts","components/animeBannerImage/animeBannerImage.component.tsx","components/button/button.styled.ts","components/animeBanner/animeBanner.styled.ts","components/animeBanner/animeBanner.component.tsx","common/purify.ts","components/description/description.styled.ts","components/description/description.component.tsx","components/collectionInfoItem/collectionInfoItem.styled.ts","components/collectionInfoItem/collectionInfoItem.component.tsx","helpers/color.ts","components/collectionInfo/collectionInfo.styled.ts","components/collectionInfo/collectionInfo.component.tsx","components/animeInfo/animeInfo.styled.ts","components/animeInfo/animeInfo.component.tsx","pages/anime/detail/detail.styled.ts","pages/anime/detail/detail.anime.tsx"],"sourcesContent":["import styled from '@emotion/styled'\r\nimport { IconArrow, IconArrowSmall } from \"assets/svg\"\r\n\r\nexport const ArrowLeft = styled(IconArrow)``\r\nexport const ArrowRight = styled(IconArrow)`\r\n  transform: rotate(180deg);\r\n`\r\nexport const ArrowTop = styled(IconArrow)`\r\n  transform: rotate(90deg);\r\n`\r\nexport const ArrowBottom = styled(IconArrow)`\r\n  transform: rotate(-90deg);\r\n`\r\n\r\nexport const ArrowSmallLeft = styled(IconArrowSmall)``\r\nexport const ArrowSmallRight = styled(IconArrowSmall)`\r\n  transform: rotate(180deg);\r\n`\r\nexport const ArrowSmallTop = styled(IconArrowSmall)`\r\n  transform: rotate(90deg);\r\n`\r\nexport const ArrowSmallBottom = styled(IconArrowSmall)`\r\n  transform: rotate(-90deg);\r\n`\r\n","import {\r\n  ArrowLeft, ArrowRight, ArrowTop, ArrowBottom,\r\n  ArrowSmallLeft, ArrowSmallRight, ArrowSmallTop, ArrowSmallBottom,\r\n} from \"./arrow.styled\"\r\n\r\nconst Arrow: React.FC<{ direction?: 'left' | 'right' | 'top' | 'bottom', className?: string, tail?: boolean }> = ({\r\n  direction,\r\n  className,\r\n  tail = true,\r\n}) => {\r\n  switch (direction) {\r\n    case 'left':\r\n      return tail ? <ArrowLeft className={className} /> : <ArrowSmallLeft className={className} />\r\n    case 'right':\r\n      return tail ? <ArrowRight className={className} /> : <ArrowSmallRight className={className} />\r\n    case 'top':\r\n      return tail ? <ArrowTop className={className} /> : <ArrowSmallTop className={className} />\r\n    case 'bottom':\r\n      return tail ? <ArrowBottom className={className} /> : <ArrowSmallBottom className={className} />\r\n    default:\r\n      return tail ? <ArrowLeft className={className} /> : <ArrowSmallLeft className={className} />\r\n  }\r\n}\r\n\r\nexport default Arrow","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.button`\r\n  cursor: pointer;\r\n  background: transparent;\r\n  border: none;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--light);\r\n  border-radius: 50%;\r\n  height: 2.75rem;\r\n  width: 2.75rem;\r\n  font-size: 1.5rem;\r\n  --color: var(--dark);\r\n`\r\n","import React, { MouseEventHandler, ReactNode } from 'react'\r\nimport { Container } from './buttonCicle.styled'\r\n\r\nconst ButtonCicle: React.FC<{ className?: string, children: ReactNode, onClick?: MouseEventHandler, title?: string }> = ({\r\n  className,\r\n  children,\r\n  onClick,\r\n  title,\r\n}) => {\r\n  return (\r\n    <Container className={className} onClick={onClick} title={title}>\r\n      {children}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ButtonCicle","import { gql, useQuery } from \"@apollo/client\"\r\nimport { MediaDetail } from 'common/interfaces/media.interface'\r\n\r\nconst GET_ANIME_DETAIL = gql`\r\n  query GetAnimeDetail($id: Int) {\r\n    Media (id: $id) {\r\n      id \r\n      coverImage {\r\n        extraLarge\r\n        large\r\n        medium\r\n        color\r\n      }\r\n      bannerImage\r\n      description\r\n      title {\r\n        romaji\r\n        native\r\n        english\r\n      }\r\n      episodes\r\n      genres\r\n      popularity\r\n      averageScore\r\n      duration\r\n      format\r\n      status\r\n      season\r\n      seasonYear\r\n      studios(isMain: true) {\r\n        nodes {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      startDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      endDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      seasonYear\r\n    }\r\n  }\r\n`\r\n\r\nexport const useGetAnimeDetail = (id: number) => useQuery<{ Media: MediaDetail }, { id: number }>(GET_ANIME_DETAIL, { variables: { id }})","import styled from '@emotion/styled'\r\nimport Img from 'components/img'\r\n\r\nexport const Image = styled(Img)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n","import { Image } from './animeBannerImage.styled'\r\n\r\nconst AnimeBannerImage: React.FC<{ src: string, className?: string }> = ({ \r\n  src,\r\n  className,\r\n}) => {\r\n  return (\r\n    <Image src={src} className={className} />\r\n  )\r\n}\r\n\r\nexport default AnimeBannerImage\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.button`\r\n  cursor: pointer;\r\n  background-color: var(--primary);\r\n  border-radius: 0.5rem;\r\n  border: 1px solid var(--primary);\r\n  height: 2.75rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--light);\r\n  padding: 0 1rem;\r\n`\r\nexport default Container\r\n","import styled from '@emotion/styled'\r\nimport AnimeCard from 'components/animeCard'\r\nimport AnimeBannerImage from 'components/animeBannerImage'\r\nimport Btn from 'components/button'\r\n\r\nexport const Card = styled(AnimeCard)`\r\n  width: 8rem;\r\n  display: block;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n`\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: column;\r\n  margin: -1.5rem -1.5rem 0 -1.5rem;\r\n  background-color: var(--light);\r\n`\r\nexport const Image = styled(AnimeBannerImage)`\r\n  height: 50vw;\r\n  width: 100%;\r\n  max-height: 25vh;\r\n`\r\n\r\nexport const Button = styled(Btn)`\r\n  width: 100%;\r\n`\r\n\r\nexport const ContainerButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 9.5rem;\r\n  flex: 1 1 auto;\r\n  cursor: pointer;\r\n  gap: 1rem;\r\n`\r\n\r\nexport const ContainerAfterImage = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  margin: 1rem 1.5rem 1.5rem 1.5rem;\r\n`\r\nexport const TitleContainer = styled.span`\r\n  margin: 0 1.5rem 1.5rem 1.5rem;\r\n  font-size: large;\r\n  font-weight: bold;\r\n`\r\nexport const ContainerIcon = styled.div<{ isLove: boolean }>`\r\n  height: 2.75rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 2.75rem;\r\n  background: ${props =>props.isLove ? 'red' : '#999'};\r\n  border-radius: 0.4rem;\r\n  flex: 0 0 auto;\r\n  color: var(--light);\r\n`","import { MouseEventHandler } from 'react'\r\nimport { Title, CoverImage } from 'common/interfaces/media.interface'\r\nimport { useAllCollectionOfAnime } from 'hooks/useCollection'\r\nimport updateCollectionSingleMedia from 'modal/updateCollectionSingleMedia'\r\nimport { IconHeart } from 'assets/svg'\r\nimport { Container, Card, Image, Button, ContainerButton, ContainerAfterImage, TitleContainer, ContainerIcon } from './animeBanner.styled'\r\n\r\nconst AnimeBanner: React.FC<{ id: number, src: string, image: CoverImage, title: Title }> = ({ \r\n  src,\r\n  image,\r\n  title,\r\n  id,\r\n}) => {\r\n  const collectionOfAnime = useAllCollectionOfAnime(id)\r\n\r\n  const showTitle = title ? title.romaji || title.english || title.native : ''\r\n\r\n  const toogleCollection: MouseEventHandler = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    await updateCollectionSingleMedia(id, {\r\n      id,\r\n      coverImage: image,\r\n      title,\r\n    })\r\n  }\r\n\r\n  const labelButton = collectionOfAnime.length === 0 ? 'Add to Collection' : 'Manage Collection' \r\n\r\n  return (\r\n    <Container>\r\n      <Image src={src} />\r\n      <ContainerAfterImage>\r\n        <Card image={image} />\r\n        <ContainerButton onClick={toogleCollection}>\r\n          <Button >{labelButton}</Button>\r\n          <ContainerIcon isLove={collectionOfAnime.length > 0 }><IconHeart /></ContainerIcon>\r\n        </ContainerButton>\r\n      </ContainerAfterImage>\r\n      <TitleContainer>{showTitle}</TitleContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AnimeBanner\r\n","import domPurify from 'dompurify'\r\n\r\nexport default domPurify(window)","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  flex: 1 1 auto;\r\n  font-size: 1.1rem;\r\n`\r\n\r\nexport const ContainerBody = styled.div`\r\n  background-color: var(--light);\r\n  border-radius: 0.4rem;\r\n  padding: 1.5rem;\r\n  text-align: justify;\r\n`\r\n\r\nexport const ContainerTitle = styled.div`\r\n  font-weight: bold;\r\n  margin-bottom: 1.5rem;\r\n`\r\n","\r\nimport React from 'react'\r\nimport DOMPurify from 'common/purify'\r\nimport { Container, ContainerBody, ContainerTitle } from './description.styled'\r\n\r\nconst Description: React.FC<{ desc: string }> = ({ desc }) => {\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerTitle>Description</ContainerTitle>\r\n      <ContainerBody dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(desc) }} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Description\r\n","import styled from '@emotion/styled'\r\nimport link from 'components/link'\r\n\r\nexport const Link = styled(link)<{ color: string }>`\r\n  display: flex;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.4rem;\r\n  background: ${props => props.color};\r\n  color: var(--light);\r\n  flex: 0 0 fit-content;\r\n`\r\n","import { Link } from \"./collectionInfoItem.styled\"\r\n\r\nconst collectionInfoItem: React.FC<{ name: string, color: string }> = ({ name, color }) => {\r\n\r\n\r\n  return (\r\n    <Link to={`/collection/${name}`} color={color}>\r\n      {name}\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default collectionInfoItem\r\n","import { ColorPercentage } from 'common/interfaces/color.interface'\r\n\r\nexport const color: (colorPercentage: ColorPercentage[], percentage: number) => string = (colorPercentage, percentage) => {\r\n  const pct = percentage / 100\r\n\r\n  let i = 1\r\n\r\n  while (i < colorPercentage.length - 1) {\r\n    if (pct < colorPercentage[i].percentage) {\r\n      break\r\n    }\r\n    i += 1\r\n  }\r\n\r\n  const lower = colorPercentage[i - 1]\r\n  const upper = colorPercentage[i]\r\n  const range = upper.percentage - lower.percentage\r\n  const rangePct = (pct - lower.percentage) / range\r\n  const pctLower = 1 - rangePct\r\n  const pctUpper = rangePct\r\n  const newColor = {\r\n    r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\r\n    g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\r\n    b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper),\r\n  }\r\n  return `rgb(${[newColor.r, newColor.g, newColor.b].join(',')})`\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  flex: 1 1 auto;\r\n  font-size: 1.1rem;\r\n`\r\n\r\nexport const ContainerBody = styled.div`\r\n  background-color: var(--light);\r\n  border-radius: 0.4rem;\r\n  padding: 1.5rem;\r\n  text-align: justify;\r\n  display: flex;\r\n  gap: 1rem;\r\n  padding: 1.5rem;\r\n  flex-flow: row;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n`\r\n\r\nexport const ContainerTitle = styled.div`\r\n  font-weight: bold;\r\n  margin-bottom: 1.5rem;\r\n`\r\n","\r\nimport React from 'react'\r\nimport { useAllCollectionOfAnime } from 'hooks/useCollection'\r\nimport CollectionInfoItem from 'components/collectionInfoItem'\r\nimport { color } from 'helpers/color'\r\nimport { ColorPercentage } from 'common/interfaces/color.interface'\r\nimport { Container, ContainerBody, ContainerTitle } from './collectionInfo.styled'\r\n\r\nconst configColor: ColorPercentage[] = [\r\n  {\r\n    percentage: 0,\r\n    color: { r: 61, g: 180, b: 242 }\r\n  },\r\n  { \r\n    percentage: 0.5,\r\n    color: { r: 61, g: 242, b: 81 }\r\n  },\r\n  {\r\n    percentage: 1,\r\n    color: { r: 242, g: 61, b: 61 }\r\n  }\r\n]\r\n\r\nconst CollectionInfo: React.FC<{ id: number }> = ({ id }) => {\r\n  const collection = useAllCollectionOfAnime(id)\r\n\r\n  if (collection.length === 0) return null\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerTitle>Collection Info</ContainerTitle>\r\n      <ContainerBody>\r\n        {collection.map((name, i, arr) => <CollectionInfoItem name={name} key={name} color={color(configColor, (i + 1) / arr.length * 100)}/>)}\r\n      </ContainerBody>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CollectionInfo\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  flex: 1 1 auto;\r\n  font-size: 1.1rem;\r\n`\r\n\r\nexport const ContainerBody = styled.div`\r\n  background-color: var(--light);\r\n  border-radius: 0.4rem;\r\n  padding: 1.5rem;\r\n  text-align: justify;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  justify-content: space-around;\r\n  gap: 1rem;\r\n`\r\n\r\nexport const ContainerTitle = styled.div`\r\n  font-weight: bold;\r\n  margin-bottom: 1.5rem;\r\n`\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  flex-flow: column;\r\n\r\n  &:last-of-type {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n  }\r\n`\r\n\r\nexport const ItemTitle = styled.div`\r\n  color: var(--color-light);\r\n`\r\n\r\nexport const ItemBody = styled.div`\r\n  \r\n`","import React from 'react'\r\nimport { Date } from 'common/interfaces/date.interface'\r\nimport { Studio } from 'common/interfaces/media.interface'\r\nimport month from 'common/constant/month.json'\r\nimport statusData from 'common/constant/status.json'\r\nimport seasonData from 'common/constant/season.json'\r\nimport { Container, ContainerBody, ContainerTitle, Item, ItemBody, ItemTitle } from './animeInfo.styled'\r\n\r\nconst AnimeInfo: React.FC<{\r\n  episodes: number,\r\n  format: string,\r\n  duration: number,\r\n  status: \"FINISHED\" | \"RELEASING\" | \"NOT_YET_RELEASED\" | \"CANCELLED\" | \"HIATUS\",\r\n  startDate: Date,\r\n  endDate: Date,\r\n  season: \"WINTER\" | \"SPRING\" | \"SUMMER\" | \"FALL\",\r\n  seasonYear: number,\r\n  averageScore: number,\r\n  popularity: number,\r\n  studios: {\r\n    nodes: Studio[]\r\n  }\r\n  genres: string[],\r\n}> = ({\r\n  episodes,\r\n  format,\r\n  duration,\r\n  status,\r\n  startDate,\r\n  endDate,\r\n  season,\r\n  seasonYear,\r\n  averageScore,\r\n  popularity,\r\n  studios,\r\n  genres,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <ContainerTitle>Anime Info</ContainerTitle>\r\n      <ContainerBody>\r\n        <Item>\r\n          <ItemTitle>Format</ItemTitle>\r\n          <ItemBody>{format}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Episodes</ItemTitle>\r\n          <ItemBody>{episodes}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Episodes Duration</ItemTitle>\r\n          <ItemBody>{duration} mins</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Status</ItemTitle>\r\n          <ItemBody>{statusData[status]}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Start Date</ItemTitle>\r\n          <ItemBody>{`${month.short[startDate.month]} ${startDate.day}, ${startDate.year}`}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>End Date</ItemTitle>\r\n          <ItemBody>{`${month.short[endDate.month]} ${endDate.day}, ${endDate.year}`}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Season</ItemTitle>\r\n          <ItemBody>{`${seasonData[season]} ${seasonYear}`}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Average Score</ItemTitle>\r\n          <ItemBody>{`${averageScore || 0}%`}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Popularity</ItemTitle>\r\n          <ItemBody>{popularity}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Studios</ItemTitle>\r\n          <ItemBody>{studios.nodes.map((value) => value.name).join(', ')}</ItemBody>\r\n        </Item>\r\n        <Item>\r\n          <ItemTitle>Genres</ItemTitle>\r\n          <ItemBody>{genres.join(', ')}</ItemBody>\r\n        </Item>\r\n      </ContainerBody>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AnimeInfo\r\n","import styled from '@emotion/styled'\r\nimport ButtonCicle from 'components/buttonCicle'\r\n\r\nexport const ButtonBack = styled(ButtonCicle)`\r\n  position: absolute;\r\n  z-index: 10;\r\n`\r\n\r\nexport const ContainerDetail = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  gap: 1.5rem;\r\n  padding-bottom: 1.5rem;\r\n`\r\n","import { useGetAnimeDetail } from 'hooks/anime/useGetAnimeDetail'\r\nimport PageContainer from 'components/pageContainer'\r\nimport AnimeBanner from 'components/animeBanner'\r\nimport Arrow from 'components/arrow'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport Description from 'components/description'\r\nimport CollectionInfo from 'components/collectionInfo'\r\nimport AnimeInfo from 'components/animeInfo'\r\nimport { ButtonBack, ContainerDetail } from './detail.styled'\r\n\r\nconst Detail = () => {\r\n  const navigate = useNavigate()\r\n  const { id } = useParams()\r\n  const { loading, error, data } = useGetAnimeDetail(Number(id))\r\n\r\n  if (loading) return <p>Loading...</p>\r\n\r\n  if (error) return <p>Error :(</p>\r\n\r\n  if (!data) return <p>Error : data not found(</p>\r\n\r\n  const { title, bannerImage, coverImage, description } = data?.Media\r\n\r\n  const showTitle = title ? title.romaji || title.english || title.native : 'Anime'\r\n\r\n  const onBack = () => navigate(-1)\r\n\r\n  return (\r\n    <PageContainer title={`Anime Collection - ${showTitle}`}>\r\n      <ButtonBack onClick={onBack}>\r\n        <Arrow />\r\n      </ButtonBack>\r\n      <AnimeBanner\r\n        id={Number(id)}\r\n        src={bannerImage}\r\n        image={coverImage }\r\n        title={title}\r\n      />\r\n      <ContainerDetail>\r\n        <CollectionInfo id={Number(id)} />\r\n        <AnimeInfo {...data?.Media} />\r\n        <Description desc={description} />\r\n      </ContainerDetail>\r\n    </PageContainer>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n"],"names":["ArrowLeft","styled","IconArrow","ArrowRight","ArrowTop","ArrowBottom","ArrowSmallLeft","IconArrowSmall","ArrowSmallRight","ArrowSmallTop","ArrowSmallBottom","direction","className","tail","Container","children","onClick","title","GET_ANIME_DETAIL","gql","Image","Img","src","Card","AnimeCard","AnimeBannerImage","Button","Btn","ContainerButton","ContainerAfterImage","TitleContainer","ContainerIcon","props","isLove","image","id","collectionOfAnime","useAllCollectionOfAnime","showTitle","romaji","english","native","toogleCollection","event","preventDefault","updateCollectionSingleMedia","coverImage","labelButton","length","domPurify","window","ContainerBody","ContainerTitle","desc","dangerouslySetInnerHTML","__html","DOMPurify","Link","link","color","name","to","colorPercentage","percentage","pct","i","lower","upper","range","rangePct","pctLower","pctUpper","newColor","r","Math","floor","g","b","join","configColor","collection","map","arr","Item","ItemTitle","ItemBody","episodes","format","duration","status","startDate","endDate","season","seasonYear","averageScore","popularity","studios","genres","statusData","month","day","year","seasonData","nodes","value","ButtonBack","ButtonCicle","ContainerDetail","navigate","useNavigate","useParams","useQuery","variables","useGetAnimeDetail","Number","loading","error","data","Media","bannerImage","description"],"sourceRoot":""}