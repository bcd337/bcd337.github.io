{"version":3,"file":"static/js/524.dbfadedf.chunk.js","mappings":"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","sources":["../ReactPaginate/webpack/universalModuleDefinition","../ReactPaginate/react_components/BreakView.js","../ReactPaginate/react_components/PageView.js","../ReactPaginate/react_components/PaginationBoxView.js","../ReactPaginate/react_components/index.js","../ReactPaginate/react_components/utils.js","../ReactPaginate/node_modules/prop-types/factoryWithThrowingShims.js","../ReactPaginate/node_modules/prop-types/index.js","../ReactPaginate/node_modules/prop-types/lib/ReactPropTypesSecret.js","../ReactPaginate/external umd {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}","../ReactPaginate/webpack/bootstrap","../ReactPaginate/webpack/runtime/compat get default export","../ReactPaginate/webpack/runtime/define property getters","../ReactPaginate/webpack/runtime/harmony module decorator","../ReactPaginate/webpack/runtime/hasOwnProperty shorthand","../ReactPaginate/webpack/runtime/make namespace object","../ReactPaginate/webpack/startup","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPaginate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactPaginate\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__98__) {\nreturn ","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = (props) => {\n  const {\n    breakLabel,\n    breakClassName,\n    breakLinkClassName,\n    breakHandler,\n    getEventListener,\n  } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={breakHandler}\n        {...getEventListener(breakHandler)}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  breakHandler: PropTypes.func.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = (props) => {\n  let { pageClassName, pageLinkClassName } = props;\n  const {\n    page,\n    selected,\n    activeClassName,\n    activeLinkClassName,\n    getEventListener,\n    pageSelectedHandler,\n    href,\n    extraAriaContext,\n    pageLabelBuilder,\n    rel,\n  } = props;\n\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' + page + (extraAriaContext ? ' ' + extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel = props.ariaLabel || 'Page ' + page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + activeClassName;\n    } else {\n      pageClassName = activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        rel={rel}\n        role={!href ? 'button' : undefined}\n        className={pageLinkClassName}\n        href={href}\n        tabIndex={selected ? '-1' : '0'}\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={pageSelectedHandler}\n        {...getEventListener(pageSelectedHandler)}\n      >\n        {pageLabelBuilder(page)}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  pageSelectedHandler: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n  pageLabelBuilder: PropTypes.func.isRequired,\n  rel: PropTypes.string,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\nimport { classNameIfDefined } from './utils';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number,\n    marginPagesDisplayed: PropTypes.number,\n    previousLabel: PropTypes.node,\n    previousAriaLabel: PropTypes.string,\n    prevPageRel: PropTypes.string,\n    prevRel: PropTypes.string,\n    nextLabel: PropTypes.node,\n    nextAriaLabel: PropTypes.string,\n    nextPageRel: PropTypes.string,\n    nextRel: PropTypes.string,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    hrefAllControls: PropTypes.bool,\n    onPageChange: PropTypes.func,\n    onPageActive: PropTypes.func,\n    onClick: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    className: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    pageLabelBuilder: PropTypes.func,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    disabledLinkClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n    eventListener: PropTypes.string,\n    renderOnZeroPageCount: PropTypes.func,\n    selectedPageRel: PropTypes.string,\n  };\n\n  static defaultProps = {\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousLabel: 'Previous',\n    previousClassName: 'previous',\n    previousAriaLabel: 'Previous page',\n    prevPageRel: 'prev',\n    prevRel: 'prev',\n    nextLabel: 'Next',\n    nextClassName: 'next',\n    nextAriaLabel: 'Next page',\n    nextPageRel: 'next',\n    nextRel: 'next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n    pageLabelBuilder: (page) => page,\n    eventListener: 'onClick',\n    renderOnZeroPageCount: undefined,\n    selectedPageRel: 'canonical',\n    hrefAllControls: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (props.initialPage !== undefined && props.forcePage !== undefined) {\n      console.warn(\n        `(react-paginate): Both initialPage (${props.initialPage}) and forcePage (${props.forcePage}) props are provided, which is discouraged.` +\n          ' Use exclusively forcePage prop for a controlled component.\\nSee https://reactjs.org/docs/forms.html#controlled-components'\n      );\n    }\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n      pageCount,\n      forcePage,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n\n    if (!Number.isInteger(pageCount)) {\n      console.warn(\n        `(react-paginate): The pageCount prop value provided is not an integer (${pageCount}). Did you forget a Math.ceil()?`\n      );\n    }\n\n    if (initialPage !== undefined && initialPage > pageCount - 1) {\n      console.warn(\n        `(react-paginate): The initialPage prop provided is greater than the maximum page index from pageCount prop (${initialPage} > ${\n          pageCount - 1\n        }).`\n      );\n    }\n\n    if (forcePage !== undefined && forcePage > pageCount - 1) {\n      console.warn(\n        `(react-paginate): The forcePage prop provided is greater than the maximum page index from pageCount prop (${forcePage} > ${\n          pageCount - 1\n        }).`\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.forcePage !== undefined &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      if (this.props.forcePage > this.props.pageCount - 1) {\n        console.warn(\n          `(react-paginate): The forcePage prop provided is greater than the maximum page index from pageCount prop (${\n            this.props.forcePage\n          } > ${this.props.pageCount - 1}).`\n        );\n      }\n\n      this.setState({ selected: this.props.forcePage });\n    }\n\n    if (\n      Number.isInteger(prevProps.pageCount) &&\n      !Number.isInteger(this.props.pageCount)\n    ) {\n      console.warn(\n        `(react-paginate): The pageCount prop value provided is not an integer (${this.props.pageCount}). Did you forget a Math.ceil()?`\n      );\n    }\n  }\n\n  handlePreviousPage = (event) => {\n    const { selected } = this.state;\n\n    this.handleClick(event, null, selected > 0 ? selected - 1 : undefined, {\n      isPrevious: true,\n    });\n  };\n\n  handleNextPage = (event) => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    this.handleClick(\n      event,\n      null,\n      selected < pageCount - 1 ? selected + 1 : undefined,\n      { isNext: true }\n    );\n  };\n\n  handlePageSelected = (selected, event) => {\n    if (this.state.selected === selected) {\n      this.callActiveCallback(selected);\n      this.handleClick(event, null, undefined, { isActive: true });\n      return;\n    }\n\n    this.handleClick(event, null, selected);\n  };\n\n  handlePageChange = (selected) => {\n    if (this.state.selected === selected) {\n      return;\n    }\n    this.setState({ selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getEventListener = (handlerFunction) => {\n    const { eventListener } = this.props;\n    return {\n      [eventListener]: handlerFunction,\n    };\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleClick = (\n    event,\n    index,\n    nextSelectedPage,\n    {\n      isPrevious = false,\n      isNext = false,\n      isBreak = false,\n      isActive = false,\n    } = {}\n  ) => {\n    event.preventDefault ? event.preventDefault() : (event.returnValue = false);\n    const { selected } = this.state;\n    const { onClick } = this.props;\n\n    let newPage = nextSelectedPage;\n\n    if (onClick) {\n      const onClickReturn = onClick({\n        index,\n        selected,\n        nextSelectedPage,\n        event,\n        isPrevious,\n        isNext,\n        isBreak,\n        isActive,\n      });\n      if (onClickReturn === false) {\n        // We abord standard behavior and let parent handle\n        // all behavior.\n        return;\n      }\n      if (Number.isInteger(onClickReturn)) {\n        // We assume parent want to go to the returned page.\n        newPage = onClickReturn;\n      }\n    }\n\n    if (newPage !== undefined) {\n      this.handlePageChange(newPage);\n    }\n  };\n\n  handleBreakClick = (index, event) => {\n    const { selected } = this.state;\n\n    this.handleClick(\n      event,\n      index,\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      { isBreak: true }\n    );\n  };\n\n  getElementHref(pageIndex) {\n    const { hrefBuilder, pageCount, hrefAllControls } = this.props;\n    if (!hrefBuilder) return;\n    if (hrefAllControls || (pageIndex >= 0 && pageIndex < pageCount)) {\n      return hrefBuilder(pageIndex + 1, pageCount, this.state.selected);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (\n      this.props.onPageChange !== undefined &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  callActiveCallback = (selectedItem) => {\n    if (\n      this.props.onPageActive !== undefined &&\n      typeof this.props.onPageActive === 'function'\n    ) {\n      this.props.onPageActive({ selected: selectedItem });\n    }\n  };\n\n  getElementPageRel = (index) => {\n    const { selected } = this.state;\n    const { nextPageRel, prevPageRel, selectedPageRel } = this.props;\n\n    if (selected - 1 === index) {\n      return prevPageRel;\n    } else if (selected === index) {\n      return selectedPageRel;\n    } else if (selected + 1 === index) {\n      return nextPageRel;\n    }\n    return undefined;\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n      pageLabelBuilder,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        pageSelectedHandler={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        rel={this.getElementPageRel(index)}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.getElementHref(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n        pageLabelBuilder={pageLabelBuilder}\n        getEventListener={this.getEventListener}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let createPageView = (index) => this.getPageElement(index);\n      let index;\n      let breakView;\n\n      // First pass: process the pages or breaks to display (or not).\n      const pagesBreaking = [];\n      for (index = 0; index < pageCount; index++) {\n        const page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          pagesBreaking.push({\n            type: 'page',\n            index,\n            display: createPageView(index),\n          });\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          pagesBreaking.push({\n            type: 'page',\n            index,\n            display: createPageView(index),\n          });\n          continue;\n        }\n\n        // If it is the first element of the array the rightSide need to be adjusted,\n        //  otherwise an extra element will be rendered\n        const adjustedRightSide =\n          selected === 0 && pageRangeDisplayed > 1 ? rightSide - 1 : rightSide;\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (\n          index >= selected - leftSide &&\n          index <= selected + adjustedRightSide\n        ) {\n          pagesBreaking.push({\n            type: 'page',\n            index,\n            display: createPageView(index),\n          });\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (\n          breakLabel &&\n          pagesBreaking.length > 0 &&\n          pagesBreaking[pagesBreaking.length - 1].display !== breakView &&\n          // We do not show break if only one active page is displayed.\n          (pageRangeDisplayed > 0 || marginPagesDisplayed > 0)\n        ) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              breakHandler={this.handleBreakClick.bind(null, index)}\n              getEventListener={this.getEventListener}\n            />\n          );\n          pagesBreaking.push({ type: 'break', index, display: breakView });\n        }\n      }\n      // Second pass: we remove breaks containing one page to the actual page.\n      pagesBreaking.forEach((pageElement, i) => {\n        let actualPageElement = pageElement;\n        // 1 2 3 4 5 6 7 ... 9 10\n        //         |\n        // 1 2 ... 4 5 6 7 8 9 10\n        //             |\n        // The break should be replaced by the page.\n        if (\n          pageElement.type === 'break' &&\n          pagesBreaking[i - 1] &&\n          pagesBreaking[i - 1].type === 'page' &&\n          pagesBreaking[i + 1] &&\n          pagesBreaking[i + 1].type === 'page' &&\n          pagesBreaking[i + 1].index - pagesBreaking[i - 1].index <= 2\n        ) {\n          actualPageElement = {\n            type: 'page',\n            index: pageElement.index,\n            display: createPageView(pageElement.index),\n          };\n        }\n        // We add the displayed elements in the same pass, to avoid another iteration.\n        items.push(actualPageElement.display);\n      });\n    }\n\n    return items;\n  };\n\n  render() {\n    const { renderOnZeroPageCount } = this.props;\n    if (this.props.pageCount === 0 && renderOnZeroPageCount !== undefined) {\n      return renderOnZeroPageCount\n        ? renderOnZeroPageCount(this.props)\n        : renderOnZeroPageCount;\n    }\n    const {\n      disabledClassName,\n      disabledLinkClassName,\n      pageCount,\n      className,\n      containerClassName,\n      previousLabel,\n      previousClassName,\n      previousLinkClassName,\n      previousAriaLabel,\n      prevRel,\n      nextLabel,\n      nextClassName,\n      nextLinkClassName,\n      nextAriaLabel,\n      nextRel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const isPreviousDisabled = selected === 0;\n    const isNextDisabled = selected === pageCount - 1;\n\n    const previousClasses = `${classNameIfDefined(previousClassName)}${\n      isPreviousDisabled ? ` ${classNameIfDefined(disabledClassName)}` : ''\n    }`;\n    const nextClasses = `${classNameIfDefined(nextClassName)}${\n      isNextDisabled ? ` ${classNameIfDefined(disabledClassName)}` : ''\n    }`;\n\n    const previousLinkClasses = `${classNameIfDefined(previousLinkClassName)}${\n      isPreviousDisabled ? ` ${classNameIfDefined(disabledLinkClassName)}` : ''\n    }`;\n    const nextLinkClasses = `${classNameIfDefined(nextLinkClassName)}${\n      isNextDisabled ? ` ${classNameIfDefined(disabledLinkClassName)}` : ''\n    }`;\n\n    const previousAriaDisabled = isPreviousDisabled ? 'true' : 'false';\n    const nextAriaDisabled = isNextDisabled ? 'true' : 'false';\n\n    return (\n      <ul className={className || containerClassName}>\n        <li className={previousClasses}>\n          <a\n            className={previousLinkClasses}\n            href={this.getElementHref(selected - 1)}\n            tabIndex={isPreviousDisabled ? '-1' : '0'}\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            aria-label={previousAriaLabel}\n            rel={prevRel}\n            {...this.getEventListener(this.handlePreviousPage)}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            className={nextLinkClasses}\n            href={this.getElementHref(selected + 1)}\n            tabIndex={isNextDisabled ? '-1' : '0'}\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            aria-label={nextAriaLabel}\n            rel={nextRel}\n            {...this.getEventListener(this.handleNextPage)}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","export function classNameIfDefined(className, orClassName = '') {\n  return className !== undefined && className !== null\n    ? className\n    : orClassName;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__98__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(351);\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n  // Store the onChange callback in a `ref`, so we can access the latest instance inside the `useCallback`.\n  callback.current = onChange;\n\n  const setRef = React.useCallback(\n    (node: Element | null) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n            if (callback.current) callback.current(inView, entry);\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n          fallbackInView,\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  React.useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["factory","__WEBPACK_EXTERNAL_MODULE__98__","BreakView","props","breakLabel","breakClassName","breakLinkClassName","breakHandler","getEventListener","className","_","role","tabIndex","onKeyPress","propTypes","PropTypes","PageView","pageClassName","pageLinkClassName","page","selected","activeClassName","activeLinkClassName","pageSelectedHandler","href","extraAriaContext","pageLabelBuilder","rel","ariaLabel","ariaCurrent","PaginationBoxView","initialSelected","t","event","state","handleClick","isPrevious","pageCount","isNext","callActiveCallback","isActive","setState","callCallback","handlerFunction","eventListener","index","nextSelectedPage","i","isBreak","l","c","preventDefault","returnValue","onClick","newPage","onClickReturn","Number","isInteger","handlePageChange","getForwardJump","getBackwardJump","selectedItem","onPageChange","onPageActive","r","nextPageRel","prevPageRel","selectedPageRel","items","a","pageRangeDisplayed","marginPagesDisplayed","push","getPageElement","leftSide","rightSide","breakView","createPageView","pagesBreaking","type","display","length","react__WEBPACK_IMPORTED_MODULE_0___default","_BreakView__WEBPACK_IMPORTED_MODULE_3__","key","handleBreakClick","bind","forEach","pageElement","actualPageElement","initialPage","forcePage","console","warn","this","e","disableInitialCallback","prevProps","forwardJump","backwardJump","pageIndex","hrefBuilder","hrefAllControls","ariaLabelBuilder","label","_PageView__WEBPACK_IMPORTED_MODULE_2__","handlePageSelected","getElementPageRel","getElementHref","renderOnZeroPageCount","disabledClassName","disabledLinkClassName","containerClassName","previousLabel","previousClassName","previousLinkClassName","previousAriaLabel","prevRel","nextLabel","nextClassName","nextLinkClassName","nextAriaLabel","nextRel","isPreviousDisabled","isNextDisabled","previousClasses","concat","classNameIfDefined","nextClasses","previousLinkClasses","nextLinkClasses","previousAriaDisabled","nextAriaDisabled","handlePreviousPage","pagination","handleNextPage","Component","orClassName","arguments","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","n","getter","__esModule","default","d","definition","o","Object","defineProperty","enumerable","get","hmd","create","children","set","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","__webpack_exports__","require","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","keys","sort","filter","map","root","has","toString","createObserver","instance","thresholds","elements","observer","IntersectionObserver","entries","entry","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","target","callback","Array","isArray","observe","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","callbacks","splice","indexOf","delete","unobserve","size","disconnect","isPlainChildren","React","useInView","delay","rootMargin","triggerOnce","skip","initialInView","onChange","current","setRef","result","ref"],"sourceRoot":""}