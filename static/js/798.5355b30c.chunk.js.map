{"version":3,"file":"static/js/798.5355b30c.chunk.js","mappings":"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","sources":["components/animeList/animeList.styled.ts","components/animeList/animeList.component.tsx","components/arrow/arrow.styled.ts","components/arrow/arrow.component.tsx","components/buttonCicle/buttonCicle.styled.ts","components/buttonCicle/buttonCicle.component.tsx","components/growContainer/growContainer.styled.ts","components/title/title.styled.ts","components/title/title.component.tsx","hooks/useStateHistory.ts","hooks/anime/useGetAnimes.ts","components/manageAnimeLists/manageAnimeLists.styled.ts","components/manageAnimeLists/manageAnimeLists.component.tsx","components/select/select.styled.ts","components/select/select.component.tsx","components/manageCollection/manageCollection.styled.ts","components/manageCollection/manageCollection.component.tsx","modal/manageCollection/manageCollection.modal.tsx","components/animeControl/animeControl.styled.ts","components/animeControl/animeControl.component.tsx","components/animeLists/animeLists.styled.ts","components/animeLists/animeLists.component.tsx","pages/anime/list/list.styled.ts","pages/anime/list/list.anime.tsx"],"sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div``\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill,minmax(8rem,1fr));\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n`\r\n","import React from \"react\"\r\nimport { Container, Grid } from './animeList.styled'\r\n\r\nconst AnimeList: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  return (\r\n    <Container data-testid=\"AnimeList-Container\">\r\n      <Grid>\r\n        {children}\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AnimeList\r\n","import styled from '@emotion/styled'\r\nimport { IconArrow, IconArrowSmall } from \"assets/svg\"\r\n\r\nexport const ArrowLeft = styled(IconArrow)``\r\nexport const ArrowRight = styled(IconArrow)`\r\n  transform: rotate(180deg);\r\n`\r\nexport const ArrowTop = styled(IconArrow)`\r\n  transform: rotate(90deg);\r\n`\r\nexport const ArrowBottom = styled(IconArrow)`\r\n  transform: rotate(-90deg);\r\n`\r\n\r\nexport const ArrowSmallLeft = styled(IconArrowSmall)``\r\nexport const ArrowSmallRight = styled(IconArrowSmall)`\r\n  transform: rotate(180deg);\r\n`\r\nexport const ArrowSmallTop = styled(IconArrowSmall)`\r\n  transform: rotate(90deg);\r\n`\r\nexport const ArrowSmallBottom = styled(IconArrowSmall)`\r\n  transform: rotate(-90deg);\r\n`\r\n","import {\r\n  ArrowLeft, ArrowRight, ArrowTop, ArrowBottom,\r\n  ArrowSmallLeft, ArrowSmallRight, ArrowSmallTop, ArrowSmallBottom,\r\n} from \"./arrow.styled\"\r\n\r\nconst Arrow: React.FC<{ direction?: 'left' | 'right' | 'top' | 'bottom', className?: string, tail?: boolean }> = ({\r\n  direction,\r\n  className,\r\n  tail = true,\r\n}) => {\r\n  switch (direction) {\r\n    case 'right':\r\n      return tail ?\r\n        <ArrowRight className={className} data-testid=\"ArrowRight\"/> :\r\n        <ArrowSmallRight className={className} data-testid=\"ArrowSmallRight\"/>\r\n    case 'top':\r\n      return tail ?\r\n        <ArrowTop className={className} data-testid=\"ArrowTop\"/> :\r\n        <ArrowSmallTop className={className} data-testid=\"ArrowSmallTop\"/>\r\n    case 'bottom':\r\n      return tail ?\r\n        <ArrowBottom className={className} data-testid=\"ArrowBottom\"/> :\r\n        <ArrowSmallBottom className={className} data-testid=\"ArrowSmallBottom\"/>\r\n    case 'left':\r\n    default:\r\n      return tail ?\r\n        <ArrowLeft className={className} data-testid=\"ArrowLeft\"/> :\r\n        <ArrowSmallLeft className={className} data-testid=\"ArrowSmallLeft\"/>\r\n  }\r\n}\r\n\r\nexport default Arrow","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.button`\r\n  cursor: pointer;\r\n  background: transparent;\r\n  border: none;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--light);\r\n  border-radius: 50%;\r\n  height: 2.75rem;\r\n  width: 2.75rem;\r\n  font-size: 1.5rem;\r\n  --color: var(--dark);\r\n`\r\n","import React, { MouseEventHandler, ReactNode } from 'react'\r\nimport { Container } from './buttonCicle.styled'\r\n\r\nconst ButtonCicle: React.FC<{ className?: string, children: ReactNode, onClick?: MouseEventHandler, title?: string }> = ({\r\n  className,\r\n  children,\r\n  onClick,\r\n  title,\r\n}) => {\r\n  return (\r\n    <Container className={className} onClick={onClick} title={title} data-testid=\"ButtonCicle-Container\">\r\n      {children}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ButtonCicle","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  flex: 1 1 auto;\r\n`\r\n\r\nexport default Container\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 3.2rem;\r\n  margin: 0;\r\n`","import React from \"react\"\r\nimport { Title } from './title.styled'\r\n\r\nconst title: React.FC<{ children: React.ReactNode }> = ({ \r\n  children, \r\n}) => {\r\n  return (\r\n    <Title>{children}</Title>\r\n  )\r\n}\r\n\r\nexport default title\r\n","import { useState } from \"react\"\r\n\r\nconst useStateHistory = (key: string, defaultValue: string | number | boolean) => {\r\n  const [data, setData] = useState(() => window.history.state[key] === undefined ? defaultValue : window.history.state[key])\r\n  return [\r\n    data,\r\n    (newData: string | number | boolean) => {\r\n      window.history.replaceState({\r\n        ...window.history.state,\r\n        [key]: newData\r\n      }, '')\r\n      setData(newData)\r\n    }\r\n  ]\r\n}\r\n\r\nexport default useStateHistory\r\n","import { gql, useQuery } from \"@apollo/client\"\r\nimport apollo from 'common/apollo'\r\nimport { AnimesPage } from 'common/interfaces/media.interface'\r\n\r\nexport const GET_ANIMES = gql`\r\n  query GetAnimes($sort: [MediaSort], $page: Int, $perPage: Int ) {\r\n    Page (page: $page, perPage: $perPage) {\r\n      id @client\r\n      pageInfo {\r\n        total\r\n        currentPage\r\n        lastPage\r\n        hasNextPage\r\n        perPage\r\n      }\r\n      media (type: ANIME, sort: $sort) {\r\n        id\r\n        coverImage {\r\n          extraLarge\r\n          large\r\n          medium\r\n          color\r\n        }\r\n        title {\r\n          romaji\r\n          native\r\n          english\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const useGetAnimes = (sort: string, page: number, perPage: number = 10 ) => \r\n  useQuery<AnimesPage, { sort: string, page: number, perPage?: number }>(GET_ANIMES, { variables: { sort, page, perPage }})\r\n\r\nexport const getAnimesPromise = (sort: string, page: number, perPage: number = 10 ) => \r\n  apollo.query<AnimesPage, { sort: string, page: number, perPage?: number }>({ query: GET_ANIMES, variables: { sort, page, perPage } })\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n  width: 100%;\r\n  flex-flow: column;\r\n`\r\n\r\nexport const ContainerItem = styled.div`\r\n  flex: 0 0 10rem;\r\n`\r\n\r\nexport const ContainerCard = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  padding: 0.5rem;\r\n  background-color: var(--background-color);\r\n  border-radius: 0.4rem;\r\n`\r\n\r\nexport const ContainerTitle = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  padding: 0.5rem;\r\n  background-color: var(--background-color);\r\n  border-radius: 0.4rem;\r\n`\r\n\r\nexport const ContainerCollection = styled.div`\r\n  flex: 1 1 auto;\r\n  position: relative;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n\r\n  > * { \r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n  }\r\n`\r\n","import { useInView } from 'react-intersection-observer'\r\nimport AnimeCard from 'components/animeCard'\r\nimport { AnimesPage, Media } from 'common/interfaces/media.interface'\r\nimport UpdateCollection from 'components/updateCollection'\r\nimport { Container, ContainerItem, ContainerCard, ContainerCollection, ContainerTitle } from './manageAnimeLists.styled'\r\n\r\nconst ManageAnimeLists: React.FC<{\r\n  loading: boolean,\r\n  error: boolean,\r\n  data: AnimesPage | undefined,\r\n  addData?: Media[],\r\n  pagingMode: boolean,\r\n  morePageLoading: boolean,\r\n  onLoadNextPage?: (inView: boolean) => void,\r\n}> = ({ \r\n  loading,\r\n  error,\r\n  data,\r\n  addData,\r\n  pagingMode,\r\n  morePageLoading,\r\n  onLoadNextPage,\r\n}) => {\r\n  const { ref } = useInView({ threshold: 0, triggerOnce: false, onChange: onLoadNextPage })\r\n  if (loading) return <p data-testid=\"ManageAnimeLists-loading\">Loading...</p>\r\n\r\n  if (error) return <p data-testid=\"ManageAnimeLists-error\">Error :(</p>\r\n\r\n  if (!data) return <p data-testid=\"ManageAnimeLists-no-data\">data not found(</p>\r\n\r\n  return (\r\n    <Container data-testid=\"ManageAnimeLists-Container\">\r\n      <ContainerTitle>\r\n        <ContainerItem>Anime</ContainerItem>\r\n        <ContainerCollection>Collection</ContainerCollection>\r\n      </ContainerTitle>\r\n      {[...data.Page.media, ...(addData || [])].map(({ title, coverImage, id }) =>\r\n        <ContainerCard key={id}>\r\n          <ContainerItem>\r\n            <AnimeCard\r\n              key={id}\r\n              shadow={false}\r\n              title={title }\r\n              image={coverImage}\r\n            />\r\n          </ContainerItem>\r\n          <ContainerCollection>\r\n            <UpdateCollection id={id} media={{ title, coverImage, id }} create={true} colorFill={false} deleteAble={false} />\r\n          </ContainerCollection>\r\n        </ContainerCard>\r\n      )}\r\n      {!morePageLoading && !pagingMode && <div ref={ref} data-testid=\"ManageAnimeLists-div\" />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ManageAnimeLists\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.select`\r\n  background: var(--light);\r\n  border: none;\r\n  height: 2.75rem;\r\n  padding: 0 0.5rem;\r\n  border-radius: 0.5rem;\r\n  color: var(--color);\r\n`","import React, { ChangeEventHandler } from 'react'\r\nimport { Container } from './select.styled'\r\n\r\nconst Select: React.FC<{\r\n  className?: string,\r\n  onChange: ChangeEventHandler, \r\n  value: string | number,\r\n  options: { value: string | number, label: string}[]\r\n}> = ({\r\n  className, \r\n  onChange,\r\n  value,\r\n  options,\r\n}) => {\r\n  return (\r\n    <Container onChange={onChange} value={value} className={className} data-testid=\"Select\">\r\n      {options.map((v) => <option key={v.value} value={v.value}>{v.label}</option>)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Select","import styled from '@emotion/styled'\r\nimport SelectElement from 'components/select'\r\nimport ButtonCicle from 'components/buttonCicle'\r\n\r\nexport const SortContainer = styled.div`\r\n  display: flex;\r\n  gap: 1.5rem;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n`\r\n\r\nexport const Select = styled(SelectElement)`\r\n  flex: 1 1 auto;\r\n  background-color: var(--background-color);\r\n`\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-flow: column;\r\n  gap: 1rem;\r\n`\r\n\r\nexport const ButtonSort =  styled(ButtonCicle)`\r\n  background-color: var(--background-color);\r\n`\r\n","import { useState  } from 'react'\r\nimport useStateHistory from 'hooks/useStateHistory'\r\nimport { useGetAnimes, getAnimesPromise } from 'hooks/anime/useGetAnimes'\r\nimport { Media } from 'common/interfaces/media.interface'\r\n\r\nimport { IconSortAsc, IconSortDesc } from 'assets/svg'\r\n\r\nimport ManageAnimeLists from 'components/manageAnimeLists'\r\n\r\nimport option from 'common/constant/sort.json'\r\n\r\nimport { ApolloProvider } from '@apollo/client'\r\nimport apollo from 'common/apollo'\r\n\r\nimport { SortContainer, Select, Container, ButtonSort } from './manageCollection.styled'\r\n\r\nconst ManageCollection = () => {\r\n  const [page, setPage] = useStateHistory('page', 0)\r\n  const [morePageLoading, setMorePageLoading] = useState(false)\r\n  const [sort, setSort] = useStateHistory('sort', option[0].value)\r\n  const [orderAsc, setOrderAsc] = useStateHistory('orderAsc', false)\r\n  const { loading, error, data } = useGetAnimes(`${sort}${!orderAsc ? '_DESC' : ''}`, page + 1)\r\n  const [additionalData, setAdditionalData] = useState<Media[]>([])\r\n  const [lastPageAdditional, setLastPageAdditional] = useState(1)\r\n \r\n  const onLoadNextPage = async (inView: boolean) => {\r\n    if (!inView) return\r\n    if (morePageLoading) return\r\n\r\n    setMorePageLoading(true)\r\n    const { data: addData } = await getAnimesPromise(`${sort}${!orderAsc ? '_DESC' : ''}`, lastPageAdditional + 1)\r\n    setLastPageAdditional(lastPageAdditional + 1)\r\n\r\n    const combine = [...data?.Page.media || [], ...additionalData]\r\n\r\n    setAdditionalData([\r\n      ...additionalData,\r\n      ...addData.Page.media.filter(({ id }) => combine.findIndex((v) => v.id === id) < 0),\r\n    ])\r\n\r\n    setMorePageLoading(false)\r\n  }\r\n\r\n  const onSort = ({ target }: React.ChangeEvent<HTMLSelectElement>) => setSort(target.value)\r\n  const onToogleSort = () => {\r\n    setPage(0)\r\n    setOrderAsc(!orderAsc)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SortContainer>\r\n        <Select onChange={onSort} value={sort} options={option} />\r\n        <ButtonSort title={orderAsc ? 'Ascending' : 'Descending'}>\r\n          {orderAsc && <IconSortAsc onClick={onToogleSort} data-testid=\"ManageCollection-toogle-sort\" />}\r\n          {!orderAsc && <IconSortDesc onClick={onToogleSort} data-testid=\"ManageCollection-toogle-sort\" />}\r\n        </ButtonSort>\r\n      </SortContainer>\r\n      <ManageAnimeLists\r\n        loading={loading}\r\n        error={!!error}\r\n        data={data}\r\n        addData={additionalData}\r\n        onLoadNextPage={onLoadNextPage}\r\n        pagingMode={false}\r\n        morePageLoading={morePageLoading}\r\n      />\r\n      {morePageLoading && \"Loading...\"}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Wrap = () => <ApolloProvider client={apollo}><ManageCollection /></ApolloProvider>\r\n\r\nexport default Wrap\r\n","import modal from 'modal'\r\nimport ManageCollection from 'components/manageCollection'\r\n\r\nconst manageCollection = () => {\r\n  return modal.fire({\r\n    html: <ManageCollection />,\r\n    showConfirmButton: false,\r\n    showCancelButton: false,\r\n    showCloseButton: true,\r\n    footer: false,\r\n    title: 'Manage Collection',\r\n  })\r\n}\r\n\r\nexport default manageCollection\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  position: sticky;\r\n  bottom: 0;\r\n  display: flex;\r\n  left: 0;\r\n  height: 4rem;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  background: var(--light);\r\n  padding-left: 1.5rem;\r\n  padding-right: 1.5rem;\r\n  max-width: 90rem;\r\n  width: 100%;\r\n  margin: auto;\r\n`\r\n\r\nexport const Item = styled.div<{ active?: boolean }>`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: 4rem;\r\n  border-right: 1px solid var(--background-color);\r\n  background-color: ${(props) => props.active ? 'var(--background-color)' : 'transparent'};\r\n\r\n  > * {\r\n    height: 2rem;\r\n    width: 2rem;\r\n  }\r\n`\r\n\r\nexport const ItemPaging = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  position: relative;\r\n  overflow-x: auto;\r\n  flex: 1 1 0;\r\n\r\n  ul {\r\n    list-style: none;\r\n    display: flex;\r\n    height: 100%;\r\n    align-items: center;\r\n\r\n    li { \r\n      user-select: none;\r\n      cursor: pointer;\r\n      width: 4rem;\r\n      text-align: center;\r\n      border-right: 1px solid var(--background-color);\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background-color: var(--light);\r\n\r\n      > * {\r\n        height: 100%;\r\n        width: 100%;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n\r\n      &.selected {\r\n        background-color: var(--background-color);\r\n      }\r\n\r\n      &:first-of-type {\r\n        position: sticky;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-last-of-type(2) {\r\n        border-right: none;\r\n      }\r\n\r\n      &:last-of-type {\r\n        position: sticky;\r\n        right: 0;\r\n        border-right: none;\r\n        border-left: 1px solid var(--background-color);\r\n      }\r\n    }\r\n  }\r\n`","import ReactPaginate from 'react-paginate'\r\nimport { IconPaging, IconScroll, IconDot } from 'assets/svg'\r\nimport Arrow from 'components/arrow'\r\nimport { Container, Item, ItemPaging } from './animeControl.styled'\r\n\r\nconst animeControl: React.FC<{ \r\n  onChangePagingMode: () => void,\r\n  onPageChange: ({ selected }: { selected: number }) => void, \r\n  pageCount: number, \r\n  page: number,\r\n  pagingMode: boolean,\r\n}> = ({\r\n  onChangePagingMode,\r\n  onPageChange,\r\n  pageCount,\r\n  page,\r\n  pagingMode,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Item active={!pagingMode} onClick={onChangePagingMode} title=\"Infinite scroll mode\">\r\n        <IconScroll />\r\n      </Item>\r\n      <Item active={pagingMode} onClick={onChangePagingMode} title=\"Pagination mode\">\r\n        <IconPaging />\r\n      </Item>\r\n      {pagingMode && pageCount > 0 && (\r\n        <ItemPaging data-testid=\"animeControl-ItemPaging\">\r\n          <ReactPaginate\r\n            breakLabel={<IconDot />}\r\n            nextLabel={<Arrow tail={false} direction=\"right\" />}\r\n            onPageChange={onPageChange}\r\n            pageRangeDisplayed={3}\r\n            marginPagesDisplayed={1}\r\n            forcePage={page}\r\n            pageCount={pageCount}\r\n            previousLabel={<Arrow tail={false} direction=\"left\" />}\r\n          />\r\n        </ItemPaging>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default animeControl\r\n","import styled from '@emotion/styled'\r\nimport Link from 'components/link'\r\n\r\nexport const ContainerLink = styled(Link)`\r\n  position: relative;\r\n`\r\n","import { useInView } from 'react-intersection-observer'\r\nimport AnimeCard from 'components/animeCard'\r\nimport AnimeList from 'components/animeList'\r\nimport { AnimesPage, Media } from 'common/interfaces/media.interface'\r\nimport { ContainerLink } from './animeLists.styled'\r\nimport { LegacyRef } from 'react'\r\n\r\nconst AnimeLists: React.FC<{\r\n  loading: boolean,\r\n  error: boolean,\r\n  data: AnimesPage | undefined,\r\n  addData?: Media[],\r\n  pagingMode: boolean,\r\n  morePageLoading: boolean,\r\n  onLoadNextPage?: (inView: boolean) => void,\r\n}> = ({ \r\n  loading,\r\n  error,\r\n  data,\r\n  addData,\r\n  pagingMode,\r\n  morePageLoading,\r\n  onLoadNextPage,\r\n}) => {\r\n  const { ref } = useInView({ threshold: 0, triggerOnce: false, onChange: onLoadNextPage, initialInView: true })\r\n\r\n  const re: LegacyRef<HTMLDivElement | null> = (r) => {\r\n    ref(r)\r\n  }\r\n  if (loading) return <p data-testid=\"AnimeLists-loading\">Loading...</p>\r\n\r\n  if (error) return <p data-testid=\"AnimeLists-error\">Error :(</p>\r\n\r\n  if (!data) return <p data-testid=\"AnimeLists-no-data\">data not found(</p>\r\n\r\n  return (\r\n    <AnimeList>\r\n      {[...data.Page.media, ...(addData || [])].map(({ title, coverImage, id }) =>\r\n        <ContainerLink key={id} to={String(id)}>\r\n          <AnimeCard\r\n            id={id}\r\n            shadow={true}\r\n            title={title }\r\n            image={coverImage}\r\n          />\r\n        </ContainerLink>\r\n      )}\r\n      {!morePageLoading && !pagingMode && <div ref={re} data-testid=\"AnimeLists-div\" />}\r\n    </AnimeList>\r\n  )\r\n}\r\n\r\nexport default AnimeLists\r\n","import styled from '@emotion/styled'\r\nimport SelectElement from 'components/select'\r\nimport GrowContainer from 'components/growContainer'\r\n\r\nexport const TitleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  white-space: nowrap;\r\n  flex-flow: column;\r\n`\r\nexport const SortContainer = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const Select = styled(SelectElement)`\r\n  flex: 1 1 auto;\r\n`\r\n\r\nexport const ButtonManage = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  background-color: var(--light);\r\n  border-radius: 0.4rem;\r\n  height: 2.75rem;\r\n  padding: 0 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const ContainerControl = styled.div`\r\n  background-color: var(--light);\r\n  position: sticky;\r\n  bottom: 0;\r\n`\r\n\r\nexport const ContainerBody = styled(GrowContainer)`\r\n  padding-bottom: 1.5rem;\r\n`\r\n","import { useState  } from 'react'\r\nimport useStateHistory from 'hooks/useStateHistory'\r\nimport { useGetAnimes, getAnimesPromise } from 'hooks/anime/useGetAnimes'\r\nimport { Media } from 'common/interfaces/media.interface'\r\nimport manageCollection from 'modal/manageCollection'\r\n\r\nimport { IconSortAsc, IconSortDesc } from 'assets/svg'\r\n\r\nimport PageContainer from 'components/pageContainer'\r\nimport ButtonCicle from 'components/buttonCicle'\r\nimport AnimeControl from 'components/animeControl'\r\nimport AnimeLists from 'components/animeLists'\r\nimport Title from 'components/title'\r\n\r\nimport option from 'common/constant/sort.json'\r\nimport { TitleContainer, SortContainer, Select, ButtonManage, ContainerControl, ContainerBody } from './list.styled'\r\n\r\nconst List = () => { \r\n  const [pagingMode, setPagingMode] = useStateHistory('pagingMode', true)\r\n  const [page, setPage] = useStateHistory('page', 0)\r\n  const [morePageLoading, setMorePageLoading] = useState(false)\r\n  const [sort, setSort] = useStateHistory('sort', option[0].value)\r\n  const [orderAsc, setOrderAsc] = useStateHistory('orderAsc', false)\r\n  const { loading, error, data, previousData } = useGetAnimes(`${sort}${!orderAsc ? '_DESC' : ''}`, page + 1)\r\n  const [additionalData, setAdditionalData] = useState<Media[]>([])\r\n  const [lastPageAdditional, setLastPageAdditional] = useState(1)\r\n \r\n  const onLoadNextPage = async (inView: boolean) => {\r\n    if (!inView) return\r\n    if (pagingMode) return\r\n    if (morePageLoading) return\r\n\r\n    setMorePageLoading(true)\r\n    const { data: addData } = await getAnimesPromise(`${sort}${!orderAsc ? '_DESC' : ''}`, lastPageAdditional + 1)\r\n    setLastPageAdditional(lastPageAdditional + 1)\r\n    const combine = [...data?.Page.media || [], ...additionalData]\r\n\r\n    setAdditionalData([\r\n      ...additionalData,\r\n      ...addData.Page.media.filter(({ id }) => combine.findIndex((v) => v.id === id) < 0),\r\n    ])\r\n    \r\n    setMorePageLoading(false)\r\n  }\r\n\r\n  const onSort = ({ target }: React.ChangeEvent<HTMLSelectElement>) => setSort(target.value)\r\n  const onToogleSort = () => {\r\n    setPage(0)\r\n    setOrderAsc(!orderAsc)\r\n  }\r\n  const onPageChange = ({ selected }: { selected: number }) => setPage(selected)\r\n  const onChangePagingMode = async () => {\r\n    setLastPageAdditional(1)\r\n    setAdditionalData([])\r\n    setPage(0)\r\n    setPagingMode(!pagingMode)\r\n  }\r\n\r\n  const onManage = () => manageCollection()\r\n\r\n  return (\r\n    <>\r\n      <PageContainer title=\"Anime Collection - Anime List\">\r\n        <TitleContainer>\r\n          <Title>\r\n            Anime List\r\n          </Title>\r\n          <ButtonManage onClick={onManage}>Manage Collection</ButtonManage>\r\n          <SortContainer>\r\n            <Select onChange={onSort} value={sort} options={option} />\r\n            <ButtonCicle title={orderAsc ? 'Ascending' : 'Descending'}>\r\n              {orderAsc && <IconSortAsc onClick={onToogleSort} />}\r\n              {!orderAsc && <IconSortDesc onClick={onToogleSort} />}\r\n            </ButtonCicle>\r\n          </SortContainer>\r\n        </TitleContainer>\r\n        <ContainerBody>\r\n          <AnimeLists\r\n            loading={loading}\r\n            error={!!error}\r\n            data={data}\r\n            addData={!pagingMode ? additionalData : []}\r\n            onLoadNextPage={onLoadNextPage}\r\n            pagingMode={pagingMode}\r\n            morePageLoading={morePageLoading}\r\n          />\r\n          {morePageLoading && !pagingMode && \"Loading...\"}\r\n        </ContainerBody>\r\n      </PageContainer>\r\n      <ContainerControl>\r\n        <AnimeControl\r\n          onPageChange={onPageChange}\r\n          pageCount={(data || previousData)?.Page.pageInfo.lastPage || 0}\r\n          page={page}\r\n          onChangePagingMode={onChangePagingMode}\r\n          pagingMode={pagingMode}\r\n        />\r\n      </ContainerControl>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"names":["Container","styled","Grid","children","ArrowLeft","IconArrow","ArrowRight","ArrowTop","ArrowBottom","ArrowSmallLeft","IconArrowSmall","ArrowSmallRight","ArrowSmallTop","ArrowSmallBottom","direction","className","tail","onClick","title","Title","key","defaultValue","useState","undefined","window","history","state","data","setData","newData","replaceState","GET_ANIMES","gql","useGetAnimes","sort","page","perPage","useQuery","variables","getAnimesPromise","apollo","query","ContainerItem","ContainerCard","ContainerTitle","ContainerCollection","loading","error","addData","pagingMode","morePageLoading","onLoadNextPage","ref","useInView","threshold","triggerOnce","onChange","Page","media","map","coverImage","id","shadow","image","create","colorFill","deleteAble","value","options","v","label","SortContainer","Select","SelectElement","ButtonSort","ButtonCicle","ManageCollection","useStateHistory","setPage","setMorePageLoading","option","setSort","orderAsc","setOrderAsc","additionalData","setAdditionalData","lastPageAdditional","setLastPageAdditional","inView","combine","filter","findIndex","onToogleSort","target","ApolloProvider","client","modal","html","showConfirmButton","showCancelButton","showCloseButton","footer","Item","props","active","ItemPaging","onChangePagingMode","onPageChange","pageCount","breakLabel","nextLabel","pageRangeDisplayed","marginPagesDisplayed","forcePage","previousLabel","ContainerLink","Link","initialInView","to","String","r","TitleContainer","ButtonManage","ContainerControl","ContainerBody","GrowContainer","setPagingMode","previousData","manageCollection","selected","pageInfo","lastPage"],"sourceRoot":""}